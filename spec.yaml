openapi: 3.0.0
info:
  title: User Contact API
  description: APIs for managing user contact information
  version: 1.0.0
servers:
  - url: https://api.localhost.com/v1

paths:
  /users:
    get:
      summary: Get all users
      description: Returns a list of all users.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a user
      description: Creates a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              
  /users/{userId}:
    get:
      summary: Get a user by ID
      description: Returns the user with the specified ID.
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              
    patch:
      summary: Update a user
      description: Updates the specified user's information.
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              
    delete:
      summary: Delete a user by ID
      description: Deletes the user with the specified ID.
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully

  /users/search:
    get:
      summary: Search users by name
      description: Returns a list of users matching the specified name.
      parameters:
        - name: name
          in: query
          required: true
          description: Name to search for
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        address:
          type: string
        mobileNumber:
          type: string
        emailAddress:
          type: string
      required:
        - id
        - firstName
        - lastName
        - address
        - mobileNumber
        - emailAddress